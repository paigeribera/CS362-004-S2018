        -:    0:Source:cardtest1.c
        -:    0:Graph:cardtest1.gcno
        -:    0:Data:cardtest1.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include <string.h>
        -:    4:#include <stdio.h>
        -:    5:#include <assert.h>
        -:    6:#include "rngs.h"
        -:    7:#include <stdlib.h>
        -:    8:#include <math.h>
        -:    9:
function assertTrue called 1 returned 100% blocks executed 80%
        -:   10:void assertTrue(int statement) {
        1:   11:    if (statement == 1) {
branch  0 taken 100%
branch  1 taken 0%
        1:   12:        printf("Test passed\n");
        1:   13:    } else {
    #####:   14:        printf("Test failed\n");
        -:   15:    }
        1:   16:}
        -:   17:
function main called 1 returned 100% blocks executed 100%
        -:   18:int main() {
        1:   19:    printf("~~testing adventurer card~~\n");
        1:   20:    int testsPassed, testsFailed = 0;
        -:   21:    struct gameState gs;
        1:   22:    int numPlayers = 2;
        1:   23:    int seed = 100;
        1:   24:    int handPos = 0;
        1:   25:    int bonus = 0;
        1:   26:    int choice1, choice2, choice3 = 0;
        1:   27:    int k[10] = {adventurer, embargo, village, minion, mine, cutpurse,sea_hag, tribute, smithy, council_room};
        -:   28:
        1:   29:    initializeGame(numPlayers, k, seed, &gs);
        -:   30:
        1:   31:    int handCountBeforeCard = numHandCards(&gs);
        1:   32:    int result = cardEffect(adventurer, choice1, choice2, choice3, &gs, handPos, &bonus);
        1:   33:    int handCountAfterCard = numHandCards(&gs);
        1:   34:    printf("Testing that +2 cards get added to hand...\n");
        -:   35:    // this will fail because of the bug i introduced in assignment2
        1:   36:    assertTrue(handCountAfterCard - handCountBeforeCard == 2);
        -:   37:
        -:   38:
        -:   39:
        1:   40:    return 0;
        -:   41:
        -:   42:}
